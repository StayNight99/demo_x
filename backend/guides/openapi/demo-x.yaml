openapi: 3.0.0
info:
  title:  API spec of X
  description: Some API spec of x for handling data transfer between frontend and backend
  version: 0.0.3
servers:
  - url: http://{apiUrl}
    description: API endpoint of backend
paths:
  /productsuite:
    get:
      tags:
        - "Product Suite"
      summary: return list of product suite
      description: return all product suite user can view or own.
      responses:
        '200':
          description: A JSON Array of product suite infos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSuite'
  /aapi:
    post:
      tags:
          - "AAPI"
      summary: register a new AAPI.
      description: register a new AAPI. (doesn't need )
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AAPI'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AAPI'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/BadRequest'
  /aapi/{aapiId}:
    get:
      tags:
          - "AAPI"
      summary: return AAPI info JSON format
      description: Get the detail infomation of a specific AAPI according to aapiId. 
      parameters:
        - in: path
          name: aapiId
          schema:
            type: string
          required: true
          description: The ID of the AAPI
      responses:
        '200':
          description: Successfully get the detail information of the AAPI
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AAPI'

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
    delete:
      tags:
          - "AAPI"
      summary: delete specific AAPI
      description: delete specific AAPI based on apiId (doesn't need?)
      parameters:
        - in: path
          name: aapiId
          schema:
            type: string
          required: true
          description: The ID of the AAPI
      responses:
        '204':
          description: delete operation success
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
    put:
      tags:
          - "AAPI"
      summary: update aapi infos
      description: update aapi infos (doesn't need?)
      parameters:
        - in: path
          name: aapiId
          schema:
            type: string
          required: true
          description: The ID of the AAPI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AAPI' 
      responses:
        '200':
          description: update operation success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/BadRequest'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/NotFound'
components:
  schemas:
    ProductSuite:
      type: object
      properties:
        id:
          type: string
          description: The productSuite ID.
        label:
          type: string
          description: The productSuite label.
        type:
          type: string
          description: Folder or List
        children:
          type: array
          description: Array of ProductSuite Object.
          items:
            $ref: '#/components/schemas/AAPI'
        aapi:
          type: array
          description: Array of AAPI under product suite.
          items:
            $ref: '#/components/schemas/AAPI'
      required:
        - id, label, type
    AAPI:
      type: object
      properties:
        _id:
          type: string
          description: The ID of this AAPI
        name:
          type: string
          description: The name of this AAPI
        productSuite:
          type: string
          description: The productSuite of this AAPI
        aapiOwner:
          type: string
          description: The own of this AAPI
        doc:
          type: string
          description: Async AAPI YAML string of this AAPI
        doc_json:
          type: string
          description: Async API in JSON format of this API
        subscriber:
          type: array
          description: The subscriber of this AAPI
          items:
            type: string
            example: ['subscriber01', 'subscriber02', 'subscriber03']
        comment:
          type: string
          description: The comment of this AAPI
        status:
          type: string
          description: The status of this AAPI (on, off)
        createdAt:
          type: string
          format: date-time
          description: create time of this AAPI
          example: "2021-06-08T07:17:40.541Z"
        updatedAt:
          type: string
          format: date-time
          description: update time of this AAPI
          example: "2021-06-08T07:17:40.541Z"
      required:
        - name, aapiOwner, doc, productSuite
    Form:
      type: object
      properties:
        _id:
          type: string
          description: Form ID
        apiId:
          type: string
          description: API ID
        subscriberId:
          type: string
          description: Subscriber ID
        submitUser:
          type: string
          description: the ID of who create this form
        status:
          type: string
          description: status of a form (pending | approved | rejected)
        approver:
          type: string
          description: the ID of who approve this form
        approveDate:
          type: string
          format: date-time
          description: approve time of this form
          example: "2021-06-08T07:17:40.541Z"
        comment:
          type: string
          description: comment of this form
        createdAt:
          type: string
          format: date-time
          description: create time of this form
          example: "2021-06-08T07:17:40.541Z"
        updatedAt:
          type: string
          format: date-time
          description: update time of this form
          example: "2021-06-08T07:17:40.541Z"
      required:
        - aapiId, subscriberId, submitUser, status
    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: integer
        msg:
          type: string
      required:
        - code
        - msg
  responses:
    BadRequest:
      description: Request is invalid (include invalid JSON data or invalid fields)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'